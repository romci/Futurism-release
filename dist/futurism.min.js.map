{"version":3,"file":"futurism.min.js","sources":["../javascript/futurism_channel.js","../javascript/elements/futurism_utils.js","../javascript/elements/futurism_element.js","../javascript/elements/futurism_table_row.js","../javascript/elements/futurism_li.js","../javascript/elements/index.js","../javascript/utils/crypto.js"],"sourcesContent":["/* global CustomEvent, setTimeout */\n\nimport CableReady from 'cable_ready'\n\nconst debounceEvents = (callback, delay = 20) => {\n  let timeoutId\n  let events = []\n  return (...args) => {\n    clearTimeout(timeoutId)\n    events = [...events, ...args]\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      callback(events)\n      events = []\n    }, delay)\n  }\n}\n\nexport const createSubscription = consumer => {\n  consumer.subscriptions.create('Futurism::Channel', {\n    connected () {\n      window.Futurism = this\n      document.addEventListener(\n        'futurism:appear',\n        debounceEvents(events => {\n          this.send({\n            signed_params: events.map(e => e.target.dataset.signedParams),\n            sgids: events.map(e => e.target.dataset.sgid),\n            signed_controllers: events.map(\n              e => e.target.dataset.signedController\n            ),\n            urls: events.map(_ => window.location.href),\n            broadcast_each: events.map(e => e.target.dataset.broadcastEach)\n          })\n        })\n      )\n    },\n\n    received (data) {\n      if (data.cableReady) {\n        CableReady.perform(data.operations, {\n          emitMissingElementWarnings: false\n        })\n\n        document.dispatchEvent(\n          new CustomEvent('futurism:appeared', {\n            bubbles: true,\n            cancelable: true\n          })\n        )\n      }\n    }\n  })\n}\n","/* global IntersectionObserver, CustomEvent, setTimeout */\n\nconst dispatchAppearEvent = (entry, observer = null) => {\n  if (!window.Futurism) {\n    return () => {\n      setTimeout(() => dispatchAppearEvent(entry, observer)(), 1)\n    }\n  }\n\n  const target = entry.target ? entry.target : entry\n\n  const evt = new CustomEvent('futurism:appear', {\n    bubbles: true,\n    detail: {\n      target,\n      observer\n    }\n  })\n\n  return () => {\n    target.dispatchEvent(evt)\n  }\n}\n\n// from https://advancedweb.hu/how-to-implement-an-exponential-backoff-retry-strategy-in-javascript/#rejection-based-retrying\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nconst callWithRetry = async (fn, depth = 0) => {\n  try {\n    return await fn()\n  } catch (e) {\n    if (depth > 10) {\n      throw e\n    }\n    await wait(1.15 ** depth * 2000)\n\n    return callWithRetry(fn, depth + 1)\n  }\n}\n\nconst observerCallback = (entries, observer) => {\n  entries.forEach(async entry => {\n    if (!entry.isIntersecting) return\n\n    await callWithRetry(dispatchAppearEvent(entry, observer))\n  })\n}\n\nexport const extendElementWithIntersectionObserver = element => {\n  Object.assign(element, {\n    observer: new IntersectionObserver(observerCallback.bind(element), {})\n  })\n\n  if (!element.hasAttribute('keep')) {\n    element.observer.observe(element)\n  }\n}\n\nexport const extendElementWithEagerLoading = element => {\n  if (element.dataset.eager === 'true') {\n    if (element.observer) element.observer.disconnect()\n    callWithRetry(dispatchAppearEvent(element))\n  }\n}\n","/* global HTMLElement */\n\nimport {\n  extendElementWithIntersectionObserver,\n  extendElementWithEagerLoading\n} from './futurism_utils'\n\nexport default class FuturismElement extends HTMLElement {\n  connectedCallback () {\n    extendElementWithIntersectionObserver(this)\n    extendElementWithEagerLoading(this)\n  }\n}\n","/* global HTMLTableRowElement */\n\nimport {\n  extendElementWithIntersectionObserver,\n  extendElementWithEagerLoading\n} from './futurism_utils'\n\nexport default class FuturismTableRow extends HTMLTableRowElement {\n  connectedCallback () {\n    extendElementWithIntersectionObserver(this)\n    extendElementWithEagerLoading(this)\n  }\n}\n","/* global HTMLLIElement */\r\n\r\nimport {\r\n  extendElementWithIntersectionObserver,\r\n  extendElementWithEagerLoading\r\n} from './futurism_utils'\r\n\r\nexport default class FuturismLI extends HTMLLIElement {\r\n  connectedCallback () {\r\n    extendElementWithIntersectionObserver(this)\r\n    extendElementWithEagerLoading(this)\r\n  }\r\n}\r\n","/* global customElements, sessionStorage */\n\nimport FuturismElement from './futurism_element'\nimport FuturismTableRow from './futurism_table_row'\nimport FuturismLI from './futurism_li'\n\nimport { sha256 } from '../utils/crypto'\n\nconst polyfillCustomElements = () => {\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)\n\n  if (customElements) {\n    if (isSafari) {\n      document.write(\n        '<script src=\"//unpkg.com/@ungap/custom-elements-builtin\"><\\x2fscript>'\n      )\n    } else {\n      try {\n        customElements.define(\n          'built-in',\n          document.createElement('tr').constructor,\n          { extends: 'tr' }\n        )\n      } catch (_) {\n        document.write(\n          '<script src=\"//unpkg.com/@ungap/custom-elements-builtin\"><\\x2fscript>'\n        )\n      }\n    }\n  } else {\n    document.write(\n      '<script src=\"//unpkg.com/document-register-element\"><\\x2fscript>'\n    )\n  }\n}\n\nconst defineElements = e => {\n  if (!customElements.get('futurism-element')) {\n    customElements.define('futurism-element', FuturismElement)\n    customElements.define('futurism-table-row', FuturismTableRow, {\n      extends: 'tr'\n    })\n    customElements.define('futurism-li', FuturismLI, { extends: 'li' })\n  }\n}\n\nconst cachePlaceholders = e => {\n  sha256(e.detail.element.outerHTML).then(hashedContent => {\n    e.detail.element.setAttribute('keep', '')\n    sessionStorage.setItem(\n      `futurism-${hashedContent}`,\n      e.detail.element.outerHTML\n    )\n    e.target.dataset.futurismHash = hashedContent\n  })\n}\n\nconst restorePlaceholders = e => {\n  const inNamespace = ([key, _payload]) => key.startsWith('futurism-')\n  Object.entries(sessionStorage)\n    .filter(inNamespace)\n    .forEach(([key, payload]) => {\n      const match = /^futurism-(.*)/.exec(key)\n      const targetElement = document.querySelector(\n        `[data-futurism-hash=\"${match[1]}\"]`\n      )\n\n      if (targetElement) {\n        targetElement.outerHTML = payload\n        sessionStorage.removeItem(key)\n      }\n    })\n}\n\nexport const initializeElements = () => {\n  polyfillCustomElements()\n  document.addEventListener('DOMContentLoaded', defineElements)\n  document.addEventListener('turbo:load', defineElements)\n  document.addEventListener('turbo:before-cache', restorePlaceholders)\n  document.addEventListener('turbolinks:load', defineElements)\n  document.addEventListener('turbolinks:before-cache', restorePlaceholders)\n  document.addEventListener('cable-ready:after-outer-html', cachePlaceholders)\n}\n","/* global crypto */\n\nexport async function sha256 (message) {\n  // encode as UTF-8\n  const msgBuffer = new TextEncoder('utf-8').encode(message)\n\n  // hash the message\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer)\n\n  // convert ArrayBuffer to Array\n  const hashArray = Array.from(new Uint8Array(hashBuffer))\n\n  // convert bytes to hex string\n  const hashHex = hashArray.map(b => ('00' + b.toString(16)).slice(-2)).join('')\n\n  return hashHex\n}\n"],"names":["createSubscription","consumer","subscriptions","create","connected","window","Futurism","this","document","addEventListener","callback","delay","timeoutId","events","args","clearTimeout","setTimeout","debounceEvents","send","signed_params","map","e","target","dataset","signedParams","sgids","sgid","signed_controllers","signedController","urls","_","location","href","broadcast_each","broadcastEach","received","data","cableReady","CableReady","perform","operations","emitMissingElementWarnings","dispatchEvent","CustomEvent","bubbles","cancelable","dispatchAppearEvent","entry","observer","evt","detail","callWithRetry","async","fn","depth","ms","Promise","resolve","observerCallback","entries","forEach","isIntersecting","extendElementWithIntersectionObserver","element","Object","assign","IntersectionObserver","bind","hasAttribute","observe","extendElementWithEagerLoading","eager","disconnect","FuturismElement","HTMLElement","connectedCallback","FuturismTableRow","HTMLTableRowElement","FuturismLI","HTMLLIElement","defineElements","customElements","get","define","extends","cachePlaceholders","message","msgBuffer","TextEncoder","encode","hashBuffer","crypto","subtle","digest","Array","from","Uint8Array","b","toString","slice","join","sha256","outerHTML","then","hashedContent","setAttribute","sessionStorage","setItem","futurismHash","restorePlaceholders","filter","key","_payload","startsWith","payload","match","exec","targetElement","querySelector","removeItem","initializeElements","isSafari","test","navigator","userAgent","write","createElement","constructor","polyfillCustomElements"],"mappings":"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"}